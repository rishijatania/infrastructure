{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Launch Application Stack - CSYE 6225 Spring 2020",
    "Parameters": {
        "NetworkStackName": {
            "Description": "Please enter the Network Stack Name",
            "Type": "String",
            "Default": "csye6225demo-network"
        },
        "PolicyStackName": {
            "Description": "Please enter the Policy Stack Name",
            "Type": "String",
            "Default": "csye6225demo-policy"
        },
        "EC2SecurityGroupName": {
            "Description": "Please enter the Group Name for Security group attached to the EC2 instances",
            "Type": "String",
            "Default": "ApplicationSecurityGroup"
        },
        "RDSSecurityGroupName": {
            "Description": "Please enter the Group Name for Security group attached to the RDS instances",
            "Type": "String",
            "Default": "DatabaseSecurityGroup"
        },
        "EC2SGName": {
            "Description": "Please enter the Name for Security group attached to the EC2 instances",
            "Type": "String",
            "Default": "EC2-SG"
        },
        "RDSSGName": {
            "Description": "Please enter the Name for Security group attached to the RDS instances",
            "Type": "String",
            "Default": "RDS-SG"
        },
        "RDSDBInstanceClass": {
            "Description": "Please enter the DB Instance class for RDS instances",
            "Type": "String"
        },
        "RDSDBPubliclyAccessiblity": {
            "Description": "Please enter the DB Instance class for RDS instances",
            "Type": "String",
            "Default": "false"
        },
        "RDSDBInstanceIdentifier": {
            "Description": "Please enter the DB Instance Identifier for RDS instances",
            "Type": "String"
        },
        "RDSDBName": {
            "Description": "Please enter the DB Name for RDS instances",
            "Type": "String"
        },
        "DBEngine": {
            "Description": "Please enter the DB Engine for RDS instances",
            "Type": "String",
            "Default": "MySQL"
        },
        "DBUsername": {
            "Description": "Please enter the DB UserName for RDS instances",
            "Type": "String"
        },
        "DBPassword": {
            "Description": "Please enter the DB Password for RDS instances",
            "Type": "String"
        },
        "DBSubnetGroupName": {
            "Description": "Please enter the RDS DB Subnet Group Name",
            "Type": "String",
            "Default": "DBSubnetGroup"
        },
        "EC2InstanceType": {
            "Description": "Please enter the EC2 Instance Type",
            "Type": "String"
        },
        "EC2AMI": {
            "Description": "Please enter the AMI for the EC2 Instance",
            "Type": "String"
        },
        "EC2EBSRootVolumeSize": {
            "Type": "Number",
            "Description": "Please enter the root volume size for EBS attached to the EC2 Instance"
        },
        "EC2EBSRootVolumeType": {
            "Description": "Please enter the root volume type for EBS attached to the EC2 Instance",
            "Type": "String",
            "Default": "gp2"
        },
        "SSHKeyPairName": {
            "Description": "Please enter the SSH key pair configured to SSH into the EC2 Instance",
            "Type": "String"
        },
        "WEBAPPENV": {
            "Description": "Please enter the WebApp ENV i.e. Dev or Prod ",
            "Type": "String"
        },
        "WEBAPPPORT": {
            "Description": "Please enter the WebApp PORT ",
            "Type": "String"
        },
        "AllocatedStorageRDS": {
            "Description": "Please enter the storeage size for RDS ",
            "Type": "Number"
        },
        "DBEngineVersion": {
            "Description": "Please enter the RDS DB Version",
            "Type": "String",
            "Default": "8.0.15"
        },
        "DBType": {
            "Description": "Please enter the DB type for ENV if EC2instance",
            "Type": "String",
            "Default": "mysql"
        },
        "CodeDeployComputePlatform": {
            "Description": "Please enter the compute platform for codedeploy",
            "Type": "String",
            "AllowedValues": [
                "ECS",
                "Lambda",
                "Server"
            ],
            "Default": "Server"
        },
        "CodeDeployApplicationName": {
            "Description": "Please enter the codedeploy application name",
            "Type": "String",
            "Default": "csye6225-webapp"
        },
        "CodeDeployDeploymentGroupName": {
            "Description": "Please enter the Deployment group name for codedeploy",
            "Type": "String",
            "Default": "csye6225-webapp-deployment"
        },
        "CodeDeployDeploymentType": {
            "Description": "Please enter the Deployment type for codedeploy",
            "Type": "String",
            "AllowedValues": [
                "IN_PLACE",
                "BLUE_GREEN"
            ],
            "Default": "IN_PLACE"
        },
        "CodeDeployDeploymentOption": {
            "Description": "Indicates whether to route deployment traffic behind a load balancer",
            "Type": "String",
            "AllowedValues": [
                "WITH_TRAFFIC_CONTROL",
                "WITHOUT_TRAFFIC_CONTROL"
            ],
            "Default": "WITHOUT_TRAFFIC_CONTROL"
        },
        "CodeDeployDeploymentConfigName": {
            "Description": "Please enter the Deployment Config name for codedeploy",
            "Type": "String",
            "Default": "CodeDeployDefault.AllAtOnce"
        }
    },
    "Resources": {
        "CodeDeployApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
                "ApplicationName": {
                    "Ref": "CodeDeployApplicationName"
                },
                "ComputePlatform": {
                    "Ref": "CodeDeployComputePlatform"
                }
            }
        },
        "CodeDeployDeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "DependsOn": "CodeDeployServiceRole",
            "Properties": {
                "ApplicationName": {
                    "Ref": "CodeDeployApplication"
                },
                "AutoRollbackConfiguration": {
                    "Enabled": "true",
                    "Events": [
                        "DEPLOYMENT_FAILURE"
                    ]
                },
                "DeploymentConfigName": {
                    "Ref": "CodeDeployDeploymentConfigName"
                },
                "DeploymentGroupName": {
                    "Ref": "CodeDeployDeploymentGroupName"
                },
                "DeploymentStyle": {
                    "DeploymentOption": {
                        "Ref": "CodeDeployDeploymentOption"
                    },
                    "DeploymentType": {
                        "Ref": "CodeDeployDeploymentType"
                    }
                },
                "Ec2TagFilters": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-EC2Instance"
                        },
                        "Type": "KEY_AND_VALUE"
                    }
                ],
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${PolicyStackName}-CodeDeployServiceRole"
                            }
                        },
                        "Arn"
                    ]
                }
            }
        },
        "SGForEC2Instance": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for EC2 instance hosting the application server",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 22,
                        "ToPort": 22
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "ToPort": 80
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 443,
                        "ToPort": 443
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 3000,
                        "ToPort": 3000
                    }
                ],
                "GroupName": {
                    "Ref": "EC2SecurityGroupName"
                },
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkStackName}-VPC"
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    {
                                        "Ref": "EC2SGName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "SGForRDSInstance": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for RDS instance hosting the database server",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "SourceSecurityGroupId": {
                            "Ref": "SGForEC2Instance"
                        }
                    }
                ],
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkStackName}-VPC"
                    }
                },
                "GroupName": {
                    "Ref": "RDSSecurityGroupName"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    {
                                        "Ref": "RDSSGName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "RDSDBInstance": {
            "Type": "AWS::RDS::DBInstance",
            "DependsOn": "SGForRDSInstance",
            "Properties": {
                "AllocatedStorage": {
                    "Ref": "AllocatedStorageRDS"
                },
                "DBInstanceClass": {
                    "Ref": "RDSDBInstanceClass"
                },
                "DBInstanceIdentifier": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            {
                                "Ref": "RDSDBInstanceIdentifier"
                            }
                        ]
                    ]
                },
                "DBName": {
                    "Ref": "RDSDBName"
                },
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                },
                "Engine": {
                    "Ref": "DBEngine"
                },
                "EngineVersion": {
                    "Ref": "DBEngineVersion"
                },
                "MasterUsername": {
                    "Ref": "DBUsername"
                },
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                },
                "MultiAZ": "false",
                "PubliclyAccessible": {
                    "Ref": "RDSDBPubliclyAccessiblity"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "SGForRDSInstance"
                    }
                ]
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "Included Private Subnets",
                "SubnetIds": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${NetworkStackName}-PublicSubnetB"
                        }
                    },
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${NetworkStackName}-PublicSubnetC"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    {
                                        "Ref": "DBSubnetGroupName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "RDSDBInstance",
            "Properties": {
                "KeyName": {
                    "Ref": "SSHKeyPairName"
                },
                "ImageId": {
                    "Ref": "EC2AMI"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeType": {
                                "Ref": "EC2EBSRootVolumeType"
                            },
                            "DeleteOnTermination": "true",
                            "VolumeSize": {
                                "Ref": "EC2EBSRootVolumeSize"
                            }
                        }
                    }
                ],
                "InstanceType": {
                    "Ref": "EC2InstanceType"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "SGForEC2Instance"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "EC2Instance"
                                ]
                            ]
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${PolicyStackName}-IAMInstanceProfile"
                    }
                },
                "SubnetId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${NetworkStackName}-PublicSubnetA"
                    }
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash \n",
                                "sudo echo export DB_HOST=",
                                {
                                    "Fn::GetAtt": [
                                        "RDSDBInstance",
                                        "Endpoint.Address"
                                    ]
                                },
                                " >> /etc/environment \n",
                                "sudo echo export DB_DIALECT=",
                                {
                                    "Ref": "DBType"
                                },
                                " >> /etc/environment \n",
                                "sudo echo export DB_PORT=",
                                {
                                    "Fn::GetAtt": [
                                        "RDSDBInstance",
                                        "Endpoint.Port"
                                    ]
                                },
                                " >> /etc/environment \n",
                                "sudo echo export DB_NAME=",
                                {
                                    "Ref": "RDSDBName"
                                },
                                " >> /etc/environment \n",
                                "sudo echo export DB_USER=",
                                {
                                    "Ref": "DBUsername"
                                },
                                " >> /etc/environment \n",
                                "sudo echo export DB_PSWD=",
                                {
                                    "Ref": "DBPassword"
                                },
                                " >> /etc/environment \n",
                                "sudo echo export NODE_ENV=",
                                {
                                    "Ref": "WEBAPPENV"
                                },
                                " >> /etc/environment \n",
                                "sudo echo export PORT=",
                                {
                                    "Ref": "WEBAPPPORT"
                                },
                                " >> /etc/environment \n",
                                "sudo echo export S3_BUCKET=",
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Sub": "${PolicyStackName}-S3Bucket"
                                    }
                                },
                                " >> /etc/environment \n",
                                "sudo echo export AWS_REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                " >> /etc/environment \n",
                                "sudo service codedeploy-agent start \n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {}
}